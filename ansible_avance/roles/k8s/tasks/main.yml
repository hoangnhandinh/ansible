# roles/k8s_cluster/tasks/main.yml

- name: Update /etc/hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items:
    - "10.12.22.91  master"
    - "10.12.22.92  worker1"
    - "10.12.22.93  worker2"

- name: Disable swap
  command: swapoff -a

# - name: Disable swap in fstab
#   replace:
#     path: /etc/fstab
#     regexp: '^(.*\sswap\s.*)$'
#     replace: '#\1'

# - name: Load kernel modules
#   copy:
#     content: |
#       overlay
#       br_netfilter
#     dest: /etc/modules-load.d/containerd.conf

# - name: Load modules
#   modprobe:
#     name: "{{ item }}"
#   with_items:
#     - overlay
#     - br_netfilter

# - name: Set kernel parameters
#   copy:
#     content: |
#       net.bridge.bridge-nf-call-ip6tables = 1
#       net.bridge.bridge-nf-call-iptables = 1
#       net.ipv4.ip_forward = 1
#     dest: /etc/sysctl.d/kubernetes.conf

# - name: Apply sysctl parameters
#   command: sysctl --system

# - name: Install dependencies
#   apt:
#     name:
#       - curl
#       - gnupg2
#       - software-properties-common
#       - apt-transport-https
#       - ca-certificates
#     state: present
#     update_cache: yes

# - name: Add Docker GPG key
#   shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg

# - name: Add Docker repository
#   apt_repository:
#     repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
#     state: present

# - name: Install containerd
#   apt:
#     name: containerd.io
#     state: present
#     update_cache: yes

# - name: Configure containerd
#   shell: |
#     containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
#     sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

# - name: Restart and enable containerd
#   systemd:
#     name: containerd
#     state: restarted
#     enabled: yes

# - name: Add Kubernetes GPG key
#   shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# - name: Add Kubernetes repository
#   shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

# - name: Install Kubernetes packages
#   apt:
#     name:
#       - kubelet
#       - kubeadm
#       - kubectl
#     state: present
#     update_cache: yes

# - name: Hold Kubernetes packages
#   apt:
#     name:
#       - kubelet
#       - kubeadm
#       - kubectl
#     state: hold

# - name: Initialize Kubernetes master node
#   command: kubeadm init --control-plane-endpoint=k8smaster.example.net
#   when: inventory_hostname == 'master-node'

# - name: Set kubeconfig for root
#   shell: |
#     mkdir -p $HOME/.kube
#     cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
#     chown $(id -u):$(id -g) $HOME/.kube/config
#   when: inventory_hostname == 'master-node'

# - name: Install Calico network plugin
#   command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.0/manifests/calico.yaml
#   when: inventory_hostname == 'master-node'

# - name: Join worker nodes to the cluster
#   command: kubeadm join k8smaster.example.net:6443 --token {{ hostvars['master-node']['kubeadm_token'] }} --discovery-token-ca-cert-hash {{ hostvars['master-node']['ca_cert_hash'] }}
#   when: inventory_hostname in groups['workers']
